---
- name: restart master api
  systemd:
    name: "{{ openshift.common.service_type }}-master-api"
    state: restarted
  when:
  - not (master_api_service_status_changed | default(false) | bool)
  - openshift.master.cluster_method == 'native'
  - master_api_enabled is defined and (master_api_enabled.rc == 0 or openshift_version | version_compare('3.7','>='))
  notify:
  - Verify API Server

# We retry the controllers because the API may not be 100% initialized yet.
- name: restart master controllers
  command: "systemctl restart {{ openshift.common.service_type }}-master-controllers"
  retries: 3
  delay: 5
  register: result
  until: result.rc == 0
  when:
  - not (master_controllers_service_status_changed | default(false) | bool)
  - openshift.master.cluster_method == 'native'
  - master_controllers_enabled is defined and (master_controllers_enabled.rc == 0 or openshift_version | version_compare('3.7','>='))

# For now, this handler is called only from update_etcd_client_urls.yml in case migration from previous version.
# Thus, {{ *_service_status_changed }} like api, controllers is neither implemented nor handled.
- name: restart single master
  systemd:
    name: "{{ openshift.common.service_type }}-master"
    state: restarted
  when:
  - single_master_enabled is defined and (single_master_enabled.rc == 0 or openshift_version | version_compare('3.7','<'))
  notify:
  - Verify API Server

- name: Verify API Server
  # Using curl here since the uri module requires python-httplib2 and
  # wait_for port doesn't provide health information.
  command: >
    curl --silent --tlsv1.2 --max-time 2
    {% if openshift.common.version_gte_3_2_or_1_2 | bool %}
    --cacert {{ openshift.common.config_base }}/master/ca-bundle.crt
    {% else %}
    --cacert {{ openshift.common.config_base }}/master/ca.crt
    {% endif %}
    {{ openshift.master.api_url }}/healthz/ready
  args:
    # Disables the following warning:
    # Consider using get_url or uri module rather than running curl
    warn: no
  register: l_api_available_output
  until: l_api_available_output.stdout == 'ok'
  retries: 120
  delay: 1
  changed_when: false
